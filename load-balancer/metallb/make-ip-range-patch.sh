#!/usr/bin/env sh

# Compute the IP range to be used by MetalLB for assigning the external IP addresses.

OVERLAY_NAME="${OVERLAY_NAME:-kind}"
KIND_DOCKER_NETWORK_NAME="${KIND_DOCKER_NETWORK_NAME:-kind}"

# script directory
get_script_dir () {
  SCRIPT_FILE="${0}"
  # while ${SCRIPT_FILE} is a symlink, resolve it
  while [ -h "${SCRIPT_FILE}" ]; do
    SCRIPT_DIR="$(cd -P "$(dirname "${SCRIPT_FILE}")" && pwd)"
    SCRIPT_FILE="$(readlink "${SCRIPT_FILE}")"
    # if ${SCRIPT_FILE} was a relative symlink
    # (so no `/` as prefix, need to resolve it relative to the symlink base directory)
    [[ "${SCRIPT_FILE}" =~ ^/.* ]] || SCRIPT_FILE="${SCRIPT_DIR}/${SCRIPT_FILE}"
  done
  SCRIPT_DIR="$( cd -P "$( dirname "${SCRIPT_FILE}" )" && pwd )"
  echo "${SCRIPT_DIR}"
}
SCRIPT_DIR="$(get_script_dir)"
MANIFESTS_DIR="${SCRIPT_DIR}/manifests"
MANIFESTS_DIR_OVERLAYS="${MANIFESTS_DIR}/overlays"

# the IP address range for the external IP addresses must be from the Docker network allocated
# for the KinD cluster, otherwise Docker will not deliver packets to KinD
KIND_DOCKER_SUBNET_CIDR="$(docker network inspect ${KIND_DOCKER_NETWORK_NAME} --format='{{(index .IPAM.Config 0).Subnet}}')"
KIND_DOCKER_SUBNET_CIDR_MASK=$(echo "${KIND_DOCKER_SUBNET_CIDR}" | cut -d/ -f2)
# number in METALLB_SUBNET_CIDR_MASK calculation here is a bit arbitrary: the Docker network mask is 16,
# so turning that to 18 seems like small enough not to use up too bit a portion of it and large enough for MetalLB
# to have enought IP addresses to assign; there are hidden assumptions made about the Docker network,
# (the first subnet is IPv4, actual network mask value) so this part is quite brittle, but it is good enough
# for all the current intents and purposes
METALLB_SUBNET_CIDR_MASK=$((${KIND_DOCKER_SUBNET_CIDR_MASK} + 2))
# sipcalc: split the original range to smaller ranges of given size
# - installation:
#   ```
#   # apt install sipcalc
#   ```
# - awk & tail magic: get the last line of the split ranges (sipcalc outputs only human-radable format)
METALLB_SUBNET_RANGE="$(echo "${KIND_DOCKER_SUBNET_CIDR}" | xargs -I{} sipcalc {} -s ${METALLB_SUBNET_CIDR_MASK} | awk '/Split network/{flag=1;next} flag && /Network/ && NF{gsub(/[[:space:]]/, ""); gsub(/Network-/, ""); print} /^$/{flag=0}' | tail -n1)"

# generate the Kustomize patch using the calculated subnet range
export METALLB_SUBNET_RANGE
# heredoc
cat <<EOF > "${MANIFESTS_DIR_OVERLAYS}/${OVERLAY_NAME}/set-ip-address-pool-range.yaml"
# This file is automatically generated from set-ip-address-pool-range.yaml.tmpl.
# Any changes made to this file will be lost.
EOF
cat "${MANIFESTS_DIR_OVERLAYS}/${OVERLAY_NAME}/set-ip-address-pool-range.yaml.tmpl" | envsubst >> "${MANIFESTS_DIR_OVERLAYS}/${OVERLAY_NAME}/set-ip-address-pool-range.yaml"


# vim: set ts=2 sw=2 tw=0 et :


